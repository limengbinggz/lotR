// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// xlogx
double xlogx(double x);
RcppExport SEXP _lotR_xlogx(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(xlogx(x));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp
double logsumexp(arma::vec logv_arma);
RcppExport SEXP _lotR_logsumexp(SEXP logv_armaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type logv_arma(logv_armaSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp(logv_arma));
    return rcpp_result_gen;
END_RCPP
}
// logexpit_cpp
double logexpit_cpp(double x);
RcppExport SEXP _lotR_logexpit_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logexpit_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp_row
double logsumexp_row(arma::rowvec logv_arma);
RcppExport SEXP _lotR_logsumexp_row(SEXP logv_armaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type logv_arma(logv_armaSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp_row(logv_arma));
    return rcpp_result_gen;
END_RCPP
}
// get_moments_cpp
List get_moments_cpp(arma::vec prob, arma::vec prob_gamma, arma::cube mu_gamma, arma::cube sigma_gamma, arma::mat mu_alpha, arma::mat Sigma_alpha, List anc, arma::vec cardanc);
RcppExport SEXP _lotR_get_moments_cpp(SEXP probSEXP, SEXP prob_gammaSEXP, SEXP mu_gammaSEXP, SEXP sigma_gammaSEXP, SEXP mu_alphaSEXP, SEXP Sigma_alphaSEXP, SEXP ancSEXP, SEXP cardancSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prob_gamma(prob_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type mu_gamma(mu_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma_gamma(sigma_gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_alpha(mu_alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_alpha(Sigma_alphaSEXP);
    Rcpp::traits::input_parameter< List >::type anc(ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cardanc(cardancSEXP);
    rcpp_result_gen = Rcpp::wrap(get_moments_cpp(prob, prob_gamma, mu_gamma, sigma_gamma, mu_alpha, Sigma_alpha, anc, cardanc));
    return rcpp_result_gen;
END_RCPP
}
// get_moments_cpp_eco
List get_moments_cpp_eco(arma::vec leaves_u, arma::cube E_beta, arma::cube E_beta_sq, arma::mat E_eta, arma::mat E_eta_sq, arma::vec prob, arma::vec prob_gamma, arma::cube mu_gamma, arma::cube sigma_gamma, arma::mat mu_alpha, arma::mat Sigma_alpha, List anc, arma::vec cardanc);
RcppExport SEXP _lotR_get_moments_cpp_eco(SEXP leaves_uSEXP, SEXP E_betaSEXP, SEXP E_beta_sqSEXP, SEXP E_etaSEXP, SEXP E_eta_sqSEXP, SEXP probSEXP, SEXP prob_gammaSEXP, SEXP mu_gammaSEXP, SEXP sigma_gammaSEXP, SEXP mu_alphaSEXP, SEXP Sigma_alphaSEXP, SEXP ancSEXP, SEXP cardancSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type leaves_u(leaves_uSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta_sq(E_beta_sqSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta_sq(E_eta_sqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prob_gamma(prob_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type mu_gamma(mu_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma_gamma(sigma_gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_alpha(mu_alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_alpha(Sigma_alphaSEXP);
    Rcpp::traits::input_parameter< List >::type anc(ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cardanc(cardancSEXP);
    rcpp_result_gen = Rcpp::wrap(get_moments_cpp_eco(leaves_u, E_beta, E_beta_sq, E_eta, E_eta_sq, prob, prob_gamma, mu_gamma, sigma_gamma, mu_alpha, Sigma_alpha, anc, cardanc));
    return rcpp_result_gen;
END_RCPP
}
// get_est_cpp
List get_est_cpp(arma::vec prob, arma::cube mu_gamma, arma::cube sigma_gamma, arma::mat mu_alpha, arma::mat Sigma_alpha, List anc, arma::vec cardanc, double z);
RcppExport SEXP _lotR_get_est_cpp(SEXP probSEXP, SEXP mu_gammaSEXP, SEXP sigma_gammaSEXP, SEXP mu_alphaSEXP, SEXP Sigma_alphaSEXP, SEXP ancSEXP, SEXP cardancSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type prob(probSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type mu_gamma(mu_gammaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma_gamma(sigma_gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_alpha(mu_alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_alpha(Sigma_alphaSEXP);
    Rcpp::traits::input_parameter< List >::type anc(ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cardanc(cardancSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(get_est_cpp(prob, mu_gamma, sigma_gamma, mu_alpha, Sigma_alpha, anc, cardanc, z));
    return rcpp_result_gen;
END_RCPP
}
// update_rmat
arma::mat update_rmat(arma::cube psi, arma::cube g_psi, arma::mat phi, arma::mat g_phi, arma::mat X, arma::cube E_beta, arma::mat E_eta, arma::cube E_beta_sq, arma::mat E_eta_sq, arma::vec v_lookup);
RcppExport SEXP _lotR_update_rmat(SEXP psiSEXP, SEXP g_psiSEXP, SEXP phiSEXP, SEXP g_phiSEXP, SEXP XSEXP, SEXP E_betaSEXP, SEXP E_etaSEXP, SEXP E_beta_sqSEXP, SEXP E_eta_sqSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type g_psi(g_psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta_sq(E_beta_sqSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta_sq(E_eta_sqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(update_rmat(psi, g_psi, phi, g_phi, X, E_beta, E_eta, E_beta_sq, E_eta_sq, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// update_rmat_partial
arma::mat update_rmat_partial(arma::vec unknown_ids, arma::cube psi, arma::cube g_psi, arma::mat phi, arma::mat g_phi, arma::mat X, arma::cube E_beta, arma::mat E_eta, arma::cube E_beta_sq, arma::mat E_eta_sq, arma::vec v_lookup);
RcppExport SEXP _lotR_update_rmat_partial(SEXP unknown_idsSEXP, SEXP psiSEXP, SEXP g_psiSEXP, SEXP phiSEXP, SEXP g_phiSEXP, SEXP XSEXP, SEXP E_betaSEXP, SEXP E_etaSEXP, SEXP E_beta_sqSEXP, SEXP E_eta_sqSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type unknown_ids(unknown_idsSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type g_psi(g_psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta_sq(E_beta_sqSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta_sq(E_eta_sqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(update_rmat_partial(unknown_ids, psi, g_psi, phi, g_phi, X, E_beta, E_eta, E_beta_sq, E_eta_sq, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// update_gamma_alpha_subid
List update_gamma_alpha_subid(int u, arma::cube g_psi, arma::mat g_phi, double tau_2_t_u, double tau_1_t_u, arma::cube E_beta, arma::mat E_zeta_u, arma::mat X, arma::mat E_eta, arma::vec E_xi_u, arma::mat rmat, arma::vec h_pau, arma::vec levels, arma::vec subject_ids, arma::vec v_lookup);
RcppExport SEXP _lotR_update_gamma_alpha_subid(SEXP uSEXP, SEXP g_psiSEXP, SEXP g_phiSEXP, SEXP tau_2_t_uSEXP, SEXP tau_1_t_uSEXP, SEXP E_betaSEXP, SEXP E_zeta_uSEXP, SEXP XSEXP, SEXP E_etaSEXP, SEXP E_xi_uSEXP, SEXP rmatSEXP, SEXP h_pauSEXP, SEXP levelsSEXP, SEXP subject_idsSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type g_psi(g_psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< double >::type tau_2_t_u(tau_2_t_uSEXP);
    Rcpp::traits::input_parameter< double >::type tau_1_t_u(tau_1_t_uSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_zeta_u(E_zeta_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E_xi_u(E_xi_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rmat(rmatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h_pau(h_pauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type levels(levelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subject_ids(subject_idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(update_gamma_alpha_subid(u, g_psi, g_phi, tau_2_t_u, tau_1_t_u, E_beta, E_zeta_u, X, E_eta, E_xi_u, rmat, h_pau, levels, subject_ids, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// update_gamma_alpha_subid_separate_tau
List update_gamma_alpha_subid_separate_tau(int u, arma::cube g_psi, arma::mat g_phi, arma::mat tau_2_t_u, arma::vec tau_1_t_u, arma::cube E_beta, arma::mat E_zeta_u, arma::mat X, arma::mat E_eta, arma::vec E_xi_u, arma::mat rmat, arma::vec h_pau, arma::vec levels, arma::vec subject_ids, arma::vec v_lookup);
RcppExport SEXP _lotR_update_gamma_alpha_subid_separate_tau(SEXP uSEXP, SEXP g_psiSEXP, SEXP g_phiSEXP, SEXP tau_2_t_uSEXP, SEXP tau_1_t_uSEXP, SEXP E_betaSEXP, SEXP E_zeta_uSEXP, SEXP XSEXP, SEXP E_etaSEXP, SEXP E_xi_uSEXP, SEXP rmatSEXP, SEXP h_pauSEXP, SEXP levelsSEXP, SEXP subject_idsSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type g_psi(g_psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau_2_t_u(tau_2_t_uSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_1_t_u(tau_1_t_uSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_zeta_u(E_zeta_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type E_xi_u(E_xi_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rmat(rmatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h_pau(h_pauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type levels(levelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subject_ids(subject_idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(update_gamma_alpha_subid_separate_tau(u, g_psi, g_phi, tau_2_t_u, tau_1_t_u, E_beta, E_zeta_u, X, E_eta, E_xi_u, rmat, h_pau, levels, subject_ids, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// getC
arma::rowvec getC(int u, arma::mat g_phi, arma::mat rmat, arma::vec tau_1_t, arma::vec h_pau, arma::vec subject_ids, arma::vec v_lookup);
RcppExport SEXP _lotR_getC(SEXP uSEXP, SEXP g_phiSEXP, SEXP rmatSEXP, SEXP tau_1_tSEXP, SEXP h_pauSEXP, SEXP subject_idsSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rmat(rmatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_1_t(tau_1_tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h_pau(h_pauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subject_ids(subject_idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(getC(u, g_phi, rmat, tau_1_t, h_pau, subject_ids, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// getC_separate_tau
arma::rowvec getC_separate_tau(int u, arma::mat g_phi, arma::mat rmat, arma::mat tau_1_t, arma::vec h_pau, arma::vec subject_ids, arma::vec v_lookup);
RcppExport SEXP _lotR_getC_separate_tau(SEXP uSEXP, SEXP g_phiSEXP, SEXP rmatSEXP, SEXP tau_1_tSEXP, SEXP h_pauSEXP, SEXP subject_idsSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rmat(rmatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau_1_t(tau_1_tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type h_pau(h_pauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subject_ids(subject_idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(getC_separate_tau(u, g_phi, rmat, tau_1_t, h_pau, subject_ids, v_lookup));
    return rcpp_result_gen;
END_RCPP
}
// get_line1_2_13_subid
List get_line1_2_13_subid(arma::cube psi, arma::cube g_psi, arma::mat phi, arma::mat g_phi, arma::mat rmat, arma::cube E_beta, arma::cube E_beta_sq, arma::mat E_eta, arma::mat E_eta_sq, arma::mat X, arma::vec v_lookup);
RcppExport SEXP _lotR_get_line1_2_13_subid(SEXP psiSEXP, SEXP g_psiSEXP, SEXP phiSEXP, SEXP g_phiSEXP, SEXP rmatSEXP, SEXP E_betaSEXP, SEXP E_beta_sqSEXP, SEXP E_etaSEXP, SEXP E_eta_sqSEXP, SEXP XSEXP, SEXP v_lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type g_psi(g_psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_phi(g_phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rmat(rmatSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta(E_betaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type E_beta_sq(E_beta_sqSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta(E_etaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type E_eta_sq(E_eta_sqSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_lookup(v_lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(get_line1_2_13_subid(psi, g_psi, phi, g_phi, rmat, E_beta, E_beta_sq, E_eta, E_eta_sq, X, v_lookup));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lotR_xlogx", (DL_FUNC) &_lotR_xlogx, 1},
    {"_lotR_logsumexp", (DL_FUNC) &_lotR_logsumexp, 1},
    {"_lotR_logexpit_cpp", (DL_FUNC) &_lotR_logexpit_cpp, 1},
    {"_lotR_logsumexp_row", (DL_FUNC) &_lotR_logsumexp_row, 1},
    {"_lotR_get_moments_cpp", (DL_FUNC) &_lotR_get_moments_cpp, 8},
    {"_lotR_get_moments_cpp_eco", (DL_FUNC) &_lotR_get_moments_cpp_eco, 13},
    {"_lotR_get_est_cpp", (DL_FUNC) &_lotR_get_est_cpp, 8},
    {"_lotR_update_rmat", (DL_FUNC) &_lotR_update_rmat, 10},
    {"_lotR_update_rmat_partial", (DL_FUNC) &_lotR_update_rmat_partial, 11},
    {"_lotR_update_gamma_alpha_subid", (DL_FUNC) &_lotR_update_gamma_alpha_subid, 15},
    {"_lotR_update_gamma_alpha_subid_separate_tau", (DL_FUNC) &_lotR_update_gamma_alpha_subid_separate_tau, 15},
    {"_lotR_getC", (DL_FUNC) &_lotR_getC, 7},
    {"_lotR_getC_separate_tau", (DL_FUNC) &_lotR_getC_separate_tau, 7},
    {"_lotR_get_line1_2_13_subid", (DL_FUNC) &_lotR_get_line1_2_13_subid, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_lotR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
